- form_for [:admin, carousel], :html => { :id => 'wrap' } do |f|
  = hidden_field_tag 'page_id', page_id if defined?(page_id) && !page_id.blank?

  .backgrounds.big-header
    = f.text_field :title
    .interact-links
      .borders.interact-button-left
      = submit_tag I18n.t('save_changes').capitalize, :class => 'backgrounds interact-button'
      .borders.interact-button-right
      = I18n.t('or')
      = link_to I18n.t('cancel').capitalize, admin_widgets_path, :class => 'back-link'

  #content.grid_12.alpha.omega
    .inner-content
      .fieldset
        %h2
          = I18n.t('widget_settings').capitalize
        -#= f.label :news_since, I18n.t('wactuality.actualities_since').capitalize
        -#= f.date_select :news_since, :prompt => true

      #carousel_items.sortable.widget-list
        = render :partial => 'item', :locals => {:form => f, :carousel => @carousel}
      = link_to I18n.t('picture.add').capitalize, '#', :class => 'small-icons add-link add-carousel-item'

  #right-sidebar.grid_4.alpha.omega
    .step
      = link_to content_tag(:span, I18n.t('picture.add').capitalize, :class=>'big-icons add-carousel-item'), '#', :class=>'backgrounds button'
    .step
      -#= link_to I18n.t('preview'), '#', :class => 'small-icons preview'
      = content_tag :span, I18n.t('preview').capitalize, :class => 'small-icons preview disabled'
      - unless carousel.new_record?
        = link_to I18n.t('duplicate'), [:duplicate, :admin, carousel], :class => 'small-icons duplicate'
        = link_to I18n.t('delete'), [:admin, carousel], :confirm => I18n.t('carousel.destroy.confirm').capitalize, :method => :delete, :class => 'small-icons delete'
    .step.open
      %a.small-icons.step-title{ :href => "#" }
        = "#{I18n.t('widget.link.create.action').capitalize} :"
      #association-carousel-page-tree.inner-step
        %ul
          = render :partial => 'admin/blocks/associated_pages', :locals => { :categories => @page_categories, :pages => @pages, :block => carousel, :element_id => 'carousel' }
      .clear
    .step.open
      %a.small-icons.step-title{ :href => "#" }
        = "#{I18n.t('folder.associated_to').capitalize} :"
      #association-carousel-tree.inner-step
        %ul
          = render :partial => 'admin/categories/associated_elements', :locals => { :association_id => 'block_category_ids', :element => carousel, :category_ids => carousel.block_category_ids, :categories => WidgetCategory.find_all_by_parent_id(nil) }
      .clear
  .clear

  #imageUploadDialog.upload-lightbox-container.white
    #imageUpload
      = f.file_field :uploaded_data
      = hidden_field_tag :target, params[:target]
      = hidden_field_tag :target_id, params[:target_id]
      = f.submit I18n.t('save').capitalize

  - session_key = ActionController::Base.session_options[:key]
  - javascript_tag do
    function initImageUpload(){
    $('#imageUploadDialog').html('<div id="imageUpload"></div>');
    $('#imageUpload').uploadify({
    'uploader': '/images/uploadify/uploadify.swf',
    = "'cancelImg': '#{image_path('admin/big-icons/delete-icon.png')}',"
    = "'script': '#{admin_attachments_path(:file_type => 'picture')}',"
    = "'buttonImg' :'#{image_path("uploadify/upload-button_#{I18n.locale}.png")}',"
    'width' :'154',
    'height' :'24',
    'scriptData': {
    'format': 'json',
    = "'authenticity_token': encodeURIComponent('#{u form_authenticity_token}')," if protect_against_forgery?
    = "'#{session_key}': encodeURIComponent('#{cookies[session_key]}')"
    },
    'ScriptAccess': 'always',
    'multi': 'true',
    'displayData': 'speed',
    'onComplete': function(e,queueID,fileObj,response,data){
    result = JSON.parse(response);
    if (result.result == 'success'){
    image_path = result.path;
    image_id = result.id;
    = "object_name='#{f.object_name}';"
    // FIXME $('#product-images ul.sortable li.clear').before('<li><a href="#" onclick="$(this).parents(\'li\').remove(); return false;" title="" class="big-icons trash"></a><a class="big-icons edit" href="#"></a><input type="hidden" name="'+object_name+'[attachment_ids][]" value="'+image_id+'"/><img src="'+image_path+'" alt="'+fileObj.name+'"/><div class="handler"><div class="inner"></div></div></li>');
    } else {
    display_notification_message('error',result.error)
    }
    },
    'onAllComplete': function(){
    // FIXME $('#product-images .sortable li:eq(0)').addClass('first-image');
    $('#imageUploadDialog').dialog('close');
    }
    });}

= stylesheet_link_tag 'admin/uploadify'
= javascript_include_tag %w(swfobject jquery.uploadify)

- remote_form_for [:admin, carousel], :html => {:method => :put, :multipart => true, :id => "hidden_form"} do |hidden_form|
  .item_form.hidden


#empty_carousel_item.block-container.widget-modify.open{:style => 'display: none;'}
  - carousel_image = image_tag 'admin/no-image_50x50.png'
  - id = "EMPTY_ID"
  .block-type{:style => 'display: none;'}
    %span.handler
      %span.inner
    %div
      = carousel_image

  .block-type.editing{:style => 'display: block;'}
    %span.handler
      %span.inner
    %div
      %label
        = "#{I18n.t('picture.one').capitalize} :"
      %label.picture-title
        = "#{I18n.t('picture.title').capitalize} :"
      %label
        = "#{I18n.t('link').capitalize} :"
      %label
        = "#{I18n.t('description').capitalize} :"
  .block-name{:style => 'display: none;'}
    = link_to '', "#{I18n.t('http')}"
    %p

  .block-name.editing{:id => "edit_item_#{id}", :style => 'display: block;'}
    = hidden_field_tag "carousel[items_attributes][#{id}][_delete]", '', :class => 'delete'
    .widget-picture
      = carousel_image
      = link_to I18n.t('carousel.change_picture').capitalize, '#'
    = text_field_tag "carousel[items_attributes][#{id}][title]"
    .widget-url
      %span
        = I18n.t('http')
      = text_field_tag "carousel[items_attributes][#{id}][url]"
      .clear
    = text_area_tag "carousel[items_attributes][#{id}][description]", '', :cols => 10, :rows => 2

    %div.actions
      = link_to_function content_tag(:span,I18n.t('save_changes'), :class=>'small-icons save'), "update_carousel_item($('#item_#{id}'), $('#edit_item_#{id}'))", :class=>'backgrounds action-button'

      = I18n.t('or')
      = link_to I18n.t('cancel').capitalize, '#', :class => 'back-link'

  .widget-actions
    = link_to '','#', :class => 'small-icons duplicate-link'
    = link_to '','#', :class => 'small-icons edit-link'
    = link_to_function '', "remove_carousel_item($(this));", :class => 'small-icons destroy-link'
  .clear
